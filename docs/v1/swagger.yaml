definitions:
  dto.CategoryRequest:
    properties:
      color:
        type: string
      description:
        type: string
      kind:
        enum:
        - income
        - expense
        type: string
      name:
        type: string
    required:
    - kind
    type: object
  dto.CategoryResponse:
    properties:
      color:
        type: string
      description:
        type: string
      id:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  dto.CategorySummary:
    properties:
      category:
        type: string
      total:
        type: number
      transactions:
        type: integer
    type: object
  dto.SummaryByDate:
    properties:
      categories:
        items:
          $ref: '#/definitions/dto.CategorySummary'
        type: array
      date:
        type: string
      total:
        type: number
    type: object
  dto.TransactionCategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.TransactionRequest:
    properties:
      amount:
        type: number
      category_id:
        type: string
      due_date:
        type: string
      kind:
        enum:
        - income
        - expense
        type: string
      purchase_date:
        type: string
      status:
        enum:
        - pending
        - paid
        - canceled
        type: string
      title:
        type: string
    required:
    - kind
    - status
    type: object
  dto.TransactionResponse:
    properties:
      amount:
        type: number
      category:
        $ref: '#/definitions/dto.TransactionCategoryResponse'
      created_at:
        type: string
      due_date:
        type: string
      id:
        type: string
      kind:
        type: string
      purchase_date:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.TransactionStatsSummary:
    properties:
      average_per_transaction:
        type: number
      total_amount:
        type: number
      total_transactions:
        type: integer
      unique_establishments:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: Lista todas as categorias aplicando filtros e paginação
      parameters:
      - collectionFormat: csv
        description: Filtrar por tipos de transação (income, expense)
        in: query
        items:
          type: string
        name: kinds
        type: array
      - description: Número da página
        in: query
        name: page
        type: integer
      - description: Limite por página
        in: query
        name: limit
        type: integer
      - description: 'Campo de ordenação (ex: name)'
        in: query
        name: order_by
        type: string
      - description: Ordem (asc, desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CategoryResponse'
            type: array
      summary: Lista categorias com filtros e paginação
      tags:
      - Categorias
    post:
      consumes:
      - application/json
      description: Cria uma nova categoria com os dados fornecidos no corpo da requisição
      parameters:
      - description: Dados da categoria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CategoryResponse'
      summary: Cria uma nova categoria
      tags:
      - Categorias
  /api/v1/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Exclui uma categoria com base no ID fornecido
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Sem conteúdo
      summary: Remove uma categoria
      tags:
      - Categorias
    get:
      consumes:
      - application/json
      description: Retorna os dados de uma categoria com base no ID fornecido
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryResponse'
      summary: Busca uma categoria por ID
      tags:
      - Categorias
    put:
      consumes:
      - application/json
      description: Atualiza os dados de uma categoria com base no ID fornecido e nos
        dados enviados no corpo da requisição
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      - description: Dados atualizados da categoria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryResponse'
      summary: Atualiza uma categoria existente
      tags:
      - Categorias
  /api/v1/transactions:
    get:
      consumes:
      - application/json
      description: Lista todas as transações aplicando filtros e paginação
      parameters:
      - collectionFormat: csv
        description: Filtrar por status
        in: query
        items:
          type: string
        name: status
        type: array
      - collectionFormat: csv
        description: Filtrar por kind
        in: query
        items:
          type: string
        name: kinds
        type: array
      - collectionFormat: csv
        description: Filtrar por categorias
        in: query
        items:
          type: string
        name: category_id
        type: array
      - description: Valor mínimo
        in: query
        name: min_amount
        type: number
      - description: Valor máximo
        in: query
        name: max_amount
        type: number
      - description: Data inicial
        in: query
        name: start_date
        type: string
      - description: Data final
        in: query
        name: end_date
        type: string
      - description: Número da página
        in: query
        name: page
        type: integer
      - description: Limite por página
        in: query
        name: limit
        type: integer
      - description: Campo de ordenação
        in: query
        name: order_by
        type: string
      - description: Ordem (asc, desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TransactionResponse'
            type: array
      summary: Lista transações com filtros e paginação
      tags:
      - Transações
    post:
      consumes:
      - application/json
      description: Cria uma nova transação com os dados fornecidos no corpo da requisição
      parameters:
      - description: Dados da transação
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TransactionResponse'
      summary: Cria uma nova transação
      tags:
      - Transações
  /api/v1/transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Exclui uma transação com base no ID fornecido
      parameters:
      - description: ID da transação
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Sem conteúdo
      summary: Remove uma transação
      tags:
      - Transações
    get:
      consumes:
      - application/json
      description: Retorna os dados de uma transação com base no ID fornecido
      parameters:
      - description: ID da transação
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TransactionResponse'
      summary: Busca uma transação por ID
      tags:
      - Transações
    put:
      consumes:
      - application/json
      description: Atualiza os dados de uma transação com base no ID fornecido e nos
        dados enviados no corpo da requisição
      parameters:
      - description: ID da transação
        in: path
        name: id
        required: true
        type: string
      - description: Dados atualizados da transação
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TransactionResponse'
      summary: Atualiza uma transação existente
      tags:
      - Transações
  /api/v1/transactions/stats:
    get:
      consumes:
      - application/json
      description: Fornece dados estatísticos agregados das transações com base nos
        filtros aplicados
      parameters:
      - description: Data inicial (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Data final (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - collectionFormat: csv
        description: Tipos de transação (income, expense)
        in: query
        items:
          type: string
        name: kinds
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TransactionStatsSummary'
      summary: Retorna estatísticas gerais das transações
      tags:
      - Transações
  /api/v1/transactions/summary:
    get:
      consumes:
      - application/json
      description: Gera um resumo estatístico das transações baseado nos filtros fornecidos
      parameters:
      - description: Data inicial (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Data final (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - collectionFormat: csv
        description: Tipos de transação (income, expense)
        in: query
        items:
          type: string
        name: kinds
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SummaryByDate'
      summary: Retorna resumo de transações
      tags:
      - Transações
  /api/v1/upload:
    post:
      consumes:
      - multipart/form-data
      description: Recebe um arquivo e os parâmetros necessários para processamento
        assíncrono.
      parameters:
      - description: 'Arquivo para importação (ex: .csv, .xlsx)'
        in: formData
        name: file
        required: true
        type: file
      - description: 'Nome do recurso (ex: transactions)'
        in: formData
        name: resource
        required: true
        type: string
      - description: 'Nome do modelo alvo (ex: Nubank)'
        in: formData
        name: model
        required: true
        type: string
      - description: 'Ação desejada (ex: create)'
        in: formData
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Arquivo recebido, processamento em andamento
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Erro nos parâmetros ou no upload
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Processar arquivo
      tags:
      - upload
swagger: "2.0"
